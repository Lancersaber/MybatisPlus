package com.example.homework.bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class StudentExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Student
     *
     * @mbggenerated Mon Apr 06 19:11:41 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Student
     *
     * @mbggenerated Mon Apr 06 19:11:41 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Student
     *
     * @mbggenerated Mon Apr 06 19:11:41 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Student
     *
     * @mbggenerated Mon Apr 06 19:11:41 CST 2020
     */
    public StudentExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Student
     *
     * @mbggenerated Mon Apr 06 19:11:41 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Student
     *
     * @mbggenerated Mon Apr 06 19:11:41 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Student
     *
     * @mbggenerated Mon Apr 06 19:11:41 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Student
     *
     * @mbggenerated Mon Apr 06 19:11:41 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Student
     *
     * @mbggenerated Mon Apr 06 19:11:41 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Student
     *
     * @mbggenerated Mon Apr 06 19:11:41 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Student
     *
     * @mbggenerated Mon Apr 06 19:11:41 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Student
     *
     * @mbggenerated Mon Apr 06 19:11:41 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Student
     *
     * @mbggenerated Mon Apr 06 19:11:41 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Student
     *
     * @mbggenerated Mon Apr 06 19:11:41 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Student
     *
     * @mbggenerated Mon Apr 06 19:11:41 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andStudentIdIsNull() {
            addCriterion("StudentId is null");
            return (Criteria) this;
        }

        public Criteria andStudentIdIsNotNull() {
            addCriterion("StudentId is not null");
            return (Criteria) this;
        }

        public Criteria andStudentIdEqualTo(Integer value) {
            addCriterion("StudentId =", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdNotEqualTo(Integer value) {
            addCriterion("StudentId <>", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdGreaterThan(Integer value) {
            addCriterion("StudentId >", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("StudentId >=", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdLessThan(Integer value) {
            addCriterion("StudentId <", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdLessThanOrEqualTo(Integer value) {
            addCriterion("StudentId <=", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdIn(List<Integer> values) {
            addCriterion("StudentId in", values, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdNotIn(List<Integer> values) {
            addCriterion("StudentId not in", values, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdBetween(Integer value1, Integer value2) {
            addCriterion("StudentId between", value1, value2, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdNotBetween(Integer value1, Integer value2) {
            addCriterion("StudentId not between", value1, value2, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentNameIsNull() {
            addCriterion("StudentName is null");
            return (Criteria) this;
        }

        public Criteria andStudentNameIsNotNull() {
            addCriterion("StudentName is not null");
            return (Criteria) this;
        }

        public Criteria andStudentNameEqualTo(String value) {
            addCriterion("StudentName =", value, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameNotEqualTo(String value) {
            addCriterion("StudentName <>", value, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameGreaterThan(String value) {
            addCriterion("StudentName >", value, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameGreaterThanOrEqualTo(String value) {
            addCriterion("StudentName >=", value, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameLessThan(String value) {
            addCriterion("StudentName <", value, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameLessThanOrEqualTo(String value) {
            addCriterion("StudentName <=", value, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameLike(String value) {
            addCriterion("StudentName like", value, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameNotLike(String value) {
            addCriterion("StudentName not like", value, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameIn(List<String> values) {
            addCriterion("StudentName in", values, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameNotIn(List<String> values) {
            addCriterion("StudentName not in", values, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameBetween(String value1, String value2) {
            addCriterion("StudentName between", value1, value2, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameNotBetween(String value1, String value2) {
            addCriterion("StudentName not between", value1, value2, "studentName");
            return (Criteria) this;
        }

        public Criteria andGenderIsNull() {
            addCriterion("Gender is null");
            return (Criteria) this;
        }

        public Criteria andGenderIsNotNull() {
            addCriterion("Gender is not null");
            return (Criteria) this;
        }

        public Criteria andGenderEqualTo(String value) {
            addCriterion("Gender =", value, "gender");
            return (Criteria) this;
        }

        public Criteria andGenderNotEqualTo(String value) {
            addCriterion("Gender <>", value, "gender");
            return (Criteria) this;
        }

        public Criteria andGenderGreaterThan(String value) {
            addCriterion("Gender >", value, "gender");
            return (Criteria) this;
        }

        public Criteria andGenderGreaterThanOrEqualTo(String value) {
            addCriterion("Gender >=", value, "gender");
            return (Criteria) this;
        }

        public Criteria andGenderLessThan(String value) {
            addCriterion("Gender <", value, "gender");
            return (Criteria) this;
        }

        public Criteria andGenderLessThanOrEqualTo(String value) {
            addCriterion("Gender <=", value, "gender");
            return (Criteria) this;
        }

        public Criteria andGenderLike(String value) {
            addCriterion("Gender like", value, "gender");
            return (Criteria) this;
        }

        public Criteria andGenderNotLike(String value) {
            addCriterion("Gender not like", value, "gender");
            return (Criteria) this;
        }

        public Criteria andGenderIn(List<String> values) {
            addCriterion("Gender in", values, "gender");
            return (Criteria) this;
        }

        public Criteria andGenderNotIn(List<String> values) {
            addCriterion("Gender not in", values, "gender");
            return (Criteria) this;
        }

        public Criteria andGenderBetween(String value1, String value2) {
            addCriterion("Gender between", value1, value2, "gender");
            return (Criteria) this;
        }

        public Criteria andGenderNotBetween(String value1, String value2) {
            addCriterion("Gender not between", value1, value2, "gender");
            return (Criteria) this;
        }

        public Criteria andStudentNativeIsNull() {
            addCriterion("StudentNative is null");
            return (Criteria) this;
        }

        public Criteria andStudentNativeIsNotNull() {
            addCriterion("StudentNative is not null");
            return (Criteria) this;
        }

        public Criteria andStudentNativeEqualTo(String value) {
            addCriterion("StudentNative =", value, "studentNative");
            return (Criteria) this;
        }

        public Criteria andStudentNativeNotEqualTo(String value) {
            addCriterion("StudentNative <>", value, "studentNative");
            return (Criteria) this;
        }

        public Criteria andStudentNativeGreaterThan(String value) {
            addCriterion("StudentNative >", value, "studentNative");
            return (Criteria) this;
        }

        public Criteria andStudentNativeGreaterThanOrEqualTo(String value) {
            addCriterion("StudentNative >=", value, "studentNative");
            return (Criteria) this;
        }

        public Criteria andStudentNativeLessThan(String value) {
            addCriterion("StudentNative <", value, "studentNative");
            return (Criteria) this;
        }

        public Criteria andStudentNativeLessThanOrEqualTo(String value) {
            addCriterion("StudentNative <=", value, "studentNative");
            return (Criteria) this;
        }

        public Criteria andStudentNativeLike(String value) {
            addCriterion("StudentNative like", value, "studentNative");
            return (Criteria) this;
        }

        public Criteria andStudentNativeNotLike(String value) {
            addCriterion("StudentNative not like", value, "studentNative");
            return (Criteria) this;
        }

        public Criteria andStudentNativeIn(List<String> values) {
            addCriterion("StudentNative in", values, "studentNative");
            return (Criteria) this;
        }

        public Criteria andStudentNativeNotIn(List<String> values) {
            addCriterion("StudentNative not in", values, "studentNative");
            return (Criteria) this;
        }

        public Criteria andStudentNativeBetween(String value1, String value2) {
            addCriterion("StudentNative between", value1, value2, "studentNative");
            return (Criteria) this;
        }

        public Criteria andStudentNativeNotBetween(String value1, String value2) {
            addCriterion("StudentNative not between", value1, value2, "studentNative");
            return (Criteria) this;
        }

        public Criteria andInstituteIdIsNull() {
            addCriterion("InstituteId is null");
            return (Criteria) this;
        }

        public Criteria andInstituteIdIsNotNull() {
            addCriterion("InstituteId is not null");
            return (Criteria) this;
        }

        public Criteria andInstituteIdEqualTo(Integer value) {
            addCriterion("InstituteId =", value, "instituteId");
            return (Criteria) this;
        }

        public Criteria andInstituteIdNotEqualTo(Integer value) {
            addCriterion("InstituteId <>", value, "instituteId");
            return (Criteria) this;
        }

        public Criteria andInstituteIdGreaterThan(Integer value) {
            addCriterion("InstituteId >", value, "instituteId");
            return (Criteria) this;
        }

        public Criteria andInstituteIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("InstituteId >=", value, "instituteId");
            return (Criteria) this;
        }

        public Criteria andInstituteIdLessThan(Integer value) {
            addCriterion("InstituteId <", value, "instituteId");
            return (Criteria) this;
        }

        public Criteria andInstituteIdLessThanOrEqualTo(Integer value) {
            addCriterion("InstituteId <=", value, "instituteId");
            return (Criteria) this;
        }

        public Criteria andInstituteIdIn(List<Integer> values) {
            addCriterion("InstituteId in", values, "instituteId");
            return (Criteria) this;
        }

        public Criteria andInstituteIdNotIn(List<Integer> values) {
            addCriterion("InstituteId not in", values, "instituteId");
            return (Criteria) this;
        }

        public Criteria andInstituteIdBetween(Integer value1, Integer value2) {
            addCriterion("InstituteId between", value1, value2, "instituteId");
            return (Criteria) this;
        }

        public Criteria andInstituteIdNotBetween(Integer value1, Integer value2) {
            addCriterion("InstituteId not between", value1, value2, "instituteId");
            return (Criteria) this;
        }

        public Criteria andStudentMajorIdIsNull() {
            addCriterion("StudentMajorId is null");
            return (Criteria) this;
        }

        public Criteria andStudentMajorIdIsNotNull() {
            addCriterion("StudentMajorId is not null");
            return (Criteria) this;
        }

        public Criteria andStudentMajorIdEqualTo(Integer value) {
            addCriterion("StudentMajorId =", value, "studentMajorId");
            return (Criteria) this;
        }

        public Criteria andStudentMajorIdNotEqualTo(Integer value) {
            addCriterion("StudentMajorId <>", value, "studentMajorId");
            return (Criteria) this;
        }

        public Criteria andStudentMajorIdGreaterThan(Integer value) {
            addCriterion("StudentMajorId >", value, "studentMajorId");
            return (Criteria) this;
        }

        public Criteria andStudentMajorIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("StudentMajorId >=", value, "studentMajorId");
            return (Criteria) this;
        }

        public Criteria andStudentMajorIdLessThan(Integer value) {
            addCriterion("StudentMajorId <", value, "studentMajorId");
            return (Criteria) this;
        }

        public Criteria andStudentMajorIdLessThanOrEqualTo(Integer value) {
            addCriterion("StudentMajorId <=", value, "studentMajorId");
            return (Criteria) this;
        }

        public Criteria andStudentMajorIdIn(List<Integer> values) {
            addCriterion("StudentMajorId in", values, "studentMajorId");
            return (Criteria) this;
        }

        public Criteria andStudentMajorIdNotIn(List<Integer> values) {
            addCriterion("StudentMajorId not in", values, "studentMajorId");
            return (Criteria) this;
        }

        public Criteria andStudentMajorIdBetween(Integer value1, Integer value2) {
            addCriterion("StudentMajorId between", value1, value2, "studentMajorId");
            return (Criteria) this;
        }

        public Criteria andStudentMajorIdNotBetween(Integer value1, Integer value2) {
            addCriterion("StudentMajorId not between", value1, value2, "studentMajorId");
            return (Criteria) this;
        }

        public Criteria andStudentTelIsNull() {
            addCriterion("StudentTel is null");
            return (Criteria) this;
        }

        public Criteria andStudentTelIsNotNull() {
            addCriterion("StudentTel is not null");
            return (Criteria) this;
        }

        public Criteria andStudentTelEqualTo(Integer value) {
            addCriterion("StudentTel =", value, "studentTel");
            return (Criteria) this;
        }

        public Criteria andStudentTelNotEqualTo(Integer value) {
            addCriterion("StudentTel <>", value, "studentTel");
            return (Criteria) this;
        }

        public Criteria andStudentTelGreaterThan(Integer value) {
            addCriterion("StudentTel >", value, "studentTel");
            return (Criteria) this;
        }

        public Criteria andStudentTelGreaterThanOrEqualTo(Integer value) {
            addCriterion("StudentTel >=", value, "studentTel");
            return (Criteria) this;
        }

        public Criteria andStudentTelLessThan(Integer value) {
            addCriterion("StudentTel <", value, "studentTel");
            return (Criteria) this;
        }

        public Criteria andStudentTelLessThanOrEqualTo(Integer value) {
            addCriterion("StudentTel <=", value, "studentTel");
            return (Criteria) this;
        }

        public Criteria andStudentTelIn(List<Integer> values) {
            addCriterion("StudentTel in", values, "studentTel");
            return (Criteria) this;
        }

        public Criteria andStudentTelNotIn(List<Integer> values) {
            addCriterion("StudentTel not in", values, "studentTel");
            return (Criteria) this;
        }

        public Criteria andStudentTelBetween(Integer value1, Integer value2) {
            addCriterion("StudentTel between", value1, value2, "studentTel");
            return (Criteria) this;
        }

        public Criteria andStudentTelNotBetween(Integer value1, Integer value2) {
            addCriterion("StudentTel not between", value1, value2, "studentTel");
            return (Criteria) this;
        }

        public Criteria andStudentBirthdayIsNull() {
            addCriterion("StudentBirthday is null");
            return (Criteria) this;
        }

        public Criteria andStudentBirthdayIsNotNull() {
            addCriterion("StudentBirthday is not null");
            return (Criteria) this;
        }

        public Criteria andStudentBirthdayEqualTo(Date value) {
            addCriterionForJDBCDate("StudentBirthday =", value, "studentBirthday");
            return (Criteria) this;
        }

        public Criteria andStudentBirthdayNotEqualTo(Date value) {
            addCriterionForJDBCDate("StudentBirthday <>", value, "studentBirthday");
            return (Criteria) this;
        }

        public Criteria andStudentBirthdayGreaterThan(Date value) {
            addCriterionForJDBCDate("StudentBirthday >", value, "studentBirthday");
            return (Criteria) this;
        }

        public Criteria andStudentBirthdayGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("StudentBirthday >=", value, "studentBirthday");
            return (Criteria) this;
        }

        public Criteria andStudentBirthdayLessThan(Date value) {
            addCriterionForJDBCDate("StudentBirthday <", value, "studentBirthday");
            return (Criteria) this;
        }

        public Criteria andStudentBirthdayLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("StudentBirthday <=", value, "studentBirthday");
            return (Criteria) this;
        }

        public Criteria andStudentBirthdayIn(List<Date> values) {
            addCriterionForJDBCDate("StudentBirthday in", values, "studentBirthday");
            return (Criteria) this;
        }

        public Criteria andStudentBirthdayNotIn(List<Date> values) {
            addCriterionForJDBCDate("StudentBirthday not in", values, "studentBirthday");
            return (Criteria) this;
        }

        public Criteria andStudentBirthdayBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("StudentBirthday between", value1, value2, "studentBirthday");
            return (Criteria) this;
        }

        public Criteria andStudentBirthdayNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("StudentBirthday not between", value1, value2, "studentBirthday");
            return (Criteria) this;
        }

        public Criteria andPasswordIsNull() {
            addCriterion("Password is null");
            return (Criteria) this;
        }

        public Criteria andPasswordIsNotNull() {
            addCriterion("Password is not null");
            return (Criteria) this;
        }

        public Criteria andPasswordEqualTo(String value) {
            addCriterion("Password =", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordNotEqualTo(String value) {
            addCriterion("Password <>", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordGreaterThan(String value) {
            addCriterion("Password >", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordGreaterThanOrEqualTo(String value) {
            addCriterion("Password >=", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordLessThan(String value) {
            addCriterion("Password <", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordLessThanOrEqualTo(String value) {
            addCriterion("Password <=", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordLike(String value) {
            addCriterion("Password like", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordNotLike(String value) {
            addCriterion("Password not like", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordIn(List<String> values) {
            addCriterion("Password in", values, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordNotIn(List<String> values) {
            addCriterion("Password not in", values, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordBetween(String value1, String value2) {
            addCriterion("Password between", value1, value2, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordNotBetween(String value1, String value2) {
            addCriterion("Password not between", value1, value2, "password");
            return (Criteria) this;
        }

        public Criteria andAdmissionDateIsNull() {
            addCriterion("AdmissionDate is null");
            return (Criteria) this;
        }

        public Criteria andAdmissionDateIsNotNull() {
            addCriterion("AdmissionDate is not null");
            return (Criteria) this;
        }

        public Criteria andAdmissionDateEqualTo(Date value) {
            addCriterionForJDBCDate("AdmissionDate =", value, "admissionDate");
            return (Criteria) this;
        }

        public Criteria andAdmissionDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("AdmissionDate <>", value, "admissionDate");
            return (Criteria) this;
        }

        public Criteria andAdmissionDateGreaterThan(Date value) {
            addCriterionForJDBCDate("AdmissionDate >", value, "admissionDate");
            return (Criteria) this;
        }

        public Criteria andAdmissionDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("AdmissionDate >=", value, "admissionDate");
            return (Criteria) this;
        }

        public Criteria andAdmissionDateLessThan(Date value) {
            addCriterionForJDBCDate("AdmissionDate <", value, "admissionDate");
            return (Criteria) this;
        }

        public Criteria andAdmissionDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("AdmissionDate <=", value, "admissionDate");
            return (Criteria) this;
        }

        public Criteria andAdmissionDateIn(List<Date> values) {
            addCriterionForJDBCDate("AdmissionDate in", values, "admissionDate");
            return (Criteria) this;
        }

        public Criteria andAdmissionDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("AdmissionDate not in", values, "admissionDate");
            return (Criteria) this;
        }

        public Criteria andAdmissionDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("AdmissionDate between", value1, value2, "admissionDate");
            return (Criteria) this;
        }

        public Criteria andAdmissionDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("AdmissionDate not between", value1, value2, "admissionDate");
            return (Criteria) this;
        }

        public Criteria andLocationIsNull() {
            addCriterion("Location is null");
            return (Criteria) this;
        }

        public Criteria andLocationIsNotNull() {
            addCriterion("Location is not null");
            return (Criteria) this;
        }

        public Criteria andLocationEqualTo(String value) {
            addCriterion("Location =", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationNotEqualTo(String value) {
            addCriterion("Location <>", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationGreaterThan(String value) {
            addCriterion("Location >", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationGreaterThanOrEqualTo(String value) {
            addCriterion("Location >=", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationLessThan(String value) {
            addCriterion("Location <", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationLessThanOrEqualTo(String value) {
            addCriterion("Location <=", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationLike(String value) {
            addCriterion("Location like", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationNotLike(String value) {
            addCriterion("Location not like", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationIn(List<String> values) {
            addCriterion("Location in", values, "location");
            return (Criteria) this;
        }

        public Criteria andLocationNotIn(List<String> values) {
            addCriterion("Location not in", values, "location");
            return (Criteria) this;
        }

        public Criteria andLocationBetween(String value1, String value2) {
            addCriterion("Location between", value1, value2, "location");
            return (Criteria) this;
        }

        public Criteria andLocationNotBetween(String value1, String value2) {
            addCriterion("Location not between", value1, value2, "location");
            return (Criteria) this;
        }

        public Criteria andIs_deleteIsNull() {
            addCriterion("Is_delete is null");
            return (Criteria) this;
        }

        public Criteria andIs_deleteIsNotNull() {
            addCriterion("Is_delete is not null");
            return (Criteria) this;
        }

        public Criteria andIs_deleteEqualTo(Integer value) {
            addCriterion("Is_delete =", value, "is_delete");
            return (Criteria) this;
        }

        public Criteria andIs_deleteNotEqualTo(Integer value) {
            addCriterion("Is_delete <>", value, "is_delete");
            return (Criteria) this;
        }

        public Criteria andIs_deleteGreaterThan(Integer value) {
            addCriterion("Is_delete >", value, "is_delete");
            return (Criteria) this;
        }

        public Criteria andIs_deleteGreaterThanOrEqualTo(Integer value) {
            addCriterion("Is_delete >=", value, "is_delete");
            return (Criteria) this;
        }

        public Criteria andIs_deleteLessThan(Integer value) {
            addCriterion("Is_delete <", value, "is_delete");
            return (Criteria) this;
        }

        public Criteria andIs_deleteLessThanOrEqualTo(Integer value) {
            addCriterion("Is_delete <=", value, "is_delete");
            return (Criteria) this;
        }

        public Criteria andIs_deleteIn(List<Integer> values) {
            addCriterion("Is_delete in", values, "is_delete");
            return (Criteria) this;
        }

        public Criteria andIs_deleteNotIn(List<Integer> values) {
            addCriterion("Is_delete not in", values, "is_delete");
            return (Criteria) this;
        }

        public Criteria andIs_deleteBetween(Integer value1, Integer value2) {
            addCriterion("Is_delete between", value1, value2, "is_delete");
            return (Criteria) this;
        }

        public Criteria andIs_deleteNotBetween(Integer value1, Integer value2) {
            addCriterion("Is_delete not between", value1, value2, "is_delete");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Student
     *
     * @mbggenerated do_not_delete_during_merge Mon Apr 06 19:11:41 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Student
     *
     * @mbggenerated Mon Apr 06 19:11:41 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}