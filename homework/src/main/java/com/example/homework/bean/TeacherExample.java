package com.example.homework.bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class TeacherExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Teacher
     *
     * @mbggenerated Thu Apr 09 13:16:52 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Teacher
     *
     * @mbggenerated Thu Apr 09 13:16:52 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Teacher
     *
     * @mbggenerated Thu Apr 09 13:16:52 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Teacher
     *
     * @mbggenerated Thu Apr 09 13:16:52 CST 2020
     */
    public TeacherExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Teacher
     *
     * @mbggenerated Thu Apr 09 13:16:52 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Teacher
     *
     * @mbggenerated Thu Apr 09 13:16:52 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Teacher
     *
     * @mbggenerated Thu Apr 09 13:16:52 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Teacher
     *
     * @mbggenerated Thu Apr 09 13:16:52 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Teacher
     *
     * @mbggenerated Thu Apr 09 13:16:52 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Teacher
     *
     * @mbggenerated Thu Apr 09 13:16:52 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Teacher
     *
     * @mbggenerated Thu Apr 09 13:16:52 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Teacher
     *
     * @mbggenerated Thu Apr 09 13:16:52 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Teacher
     *
     * @mbggenerated Thu Apr 09 13:16:52 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Teacher
     *
     * @mbggenerated Thu Apr 09 13:16:52 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Teacher
     *
     * @mbggenerated Thu Apr 09 13:16:52 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andTeacherIdIsNull() {
            addCriterion("TeacherId is null");
            return (Criteria) this;
        }

        public Criteria andTeacherIdIsNotNull() {
            addCriterion("TeacherId is not null");
            return (Criteria) this;
        }

        public Criteria andTeacherIdEqualTo(Integer value) {
            addCriterion("TeacherId =", value, "teacherId");
            return (Criteria) this;
        }

        public Criteria andTeacherIdNotEqualTo(Integer value) {
            addCriterion("TeacherId <>", value, "teacherId");
            return (Criteria) this;
        }

        public Criteria andTeacherIdGreaterThan(Integer value) {
            addCriterion("TeacherId >", value, "teacherId");
            return (Criteria) this;
        }

        public Criteria andTeacherIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("TeacherId >=", value, "teacherId");
            return (Criteria) this;
        }

        public Criteria andTeacherIdLessThan(Integer value) {
            addCriterion("TeacherId <", value, "teacherId");
            return (Criteria) this;
        }

        public Criteria andTeacherIdLessThanOrEqualTo(Integer value) {
            addCriterion("TeacherId <=", value, "teacherId");
            return (Criteria) this;
        }

        public Criteria andTeacherIdIn(List<Integer> values) {
            addCriterion("TeacherId in", values, "teacherId");
            return (Criteria) this;
        }

        public Criteria andTeacherIdNotIn(List<Integer> values) {
            addCriterion("TeacherId not in", values, "teacherId");
            return (Criteria) this;
        }

        public Criteria andTeacherIdBetween(Integer value1, Integer value2) {
            addCriterion("TeacherId between", value1, value2, "teacherId");
            return (Criteria) this;
        }

        public Criteria andTeacherIdNotBetween(Integer value1, Integer value2) {
            addCriterion("TeacherId not between", value1, value2, "teacherId");
            return (Criteria) this;
        }

        public Criteria andTeacherNameIsNull() {
            addCriterion("TeacherName is null");
            return (Criteria) this;
        }

        public Criteria andTeacherNameIsNotNull() {
            addCriterion("TeacherName is not null");
            return (Criteria) this;
        }

        public Criteria andTeacherNameEqualTo(String value) {
            addCriterion("TeacherName =", value, "teacherName");
            return (Criteria) this;
        }

        public Criteria andTeacherNameNotEqualTo(String value) {
            addCriterion("TeacherName <>", value, "teacherName");
            return (Criteria) this;
        }

        public Criteria andTeacherNameGreaterThan(String value) {
            addCriterion("TeacherName >", value, "teacherName");
            return (Criteria) this;
        }

        public Criteria andTeacherNameGreaterThanOrEqualTo(String value) {
            addCriterion("TeacherName >=", value, "teacherName");
            return (Criteria) this;
        }

        public Criteria andTeacherNameLessThan(String value) {
            addCriterion("TeacherName <", value, "teacherName");
            return (Criteria) this;
        }

        public Criteria andTeacherNameLessThanOrEqualTo(String value) {
            addCriterion("TeacherName <=", value, "teacherName");
            return (Criteria) this;
        }

        public Criteria andTeacherNameLike(String value) {
            addCriterion("TeacherName like", value, "teacherName");
            return (Criteria) this;
        }

        public Criteria andTeacherNameNotLike(String value) {
            addCriterion("TeacherName not like", value, "teacherName");
            return (Criteria) this;
        }

        public Criteria andTeacherNameIn(List<String> values) {
            addCriterion("TeacherName in", values, "teacherName");
            return (Criteria) this;
        }

        public Criteria andTeacherNameNotIn(List<String> values) {
            addCriterion("TeacherName not in", values, "teacherName");
            return (Criteria) this;
        }

        public Criteria andTeacherNameBetween(String value1, String value2) {
            addCriterion("TeacherName between", value1, value2, "teacherName");
            return (Criteria) this;
        }

        public Criteria andTeacherNameNotBetween(String value1, String value2) {
            addCriterion("TeacherName not between", value1, value2, "teacherName");
            return (Criteria) this;
        }

        public Criteria andGenderIsNull() {
            addCriterion("Gender is null");
            return (Criteria) this;
        }

        public Criteria andGenderIsNotNull() {
            addCriterion("Gender is not null");
            return (Criteria) this;
        }

        public Criteria andGenderEqualTo(String value) {
            addCriterion("Gender =", value, "gender");
            return (Criteria) this;
        }

        public Criteria andGenderNotEqualTo(String value) {
            addCriterion("Gender <>", value, "gender");
            return (Criteria) this;
        }

        public Criteria andGenderGreaterThan(String value) {
            addCriterion("Gender >", value, "gender");
            return (Criteria) this;
        }

        public Criteria andGenderGreaterThanOrEqualTo(String value) {
            addCriterion("Gender >=", value, "gender");
            return (Criteria) this;
        }

        public Criteria andGenderLessThan(String value) {
            addCriterion("Gender <", value, "gender");
            return (Criteria) this;
        }

        public Criteria andGenderLessThanOrEqualTo(String value) {
            addCriterion("Gender <=", value, "gender");
            return (Criteria) this;
        }

        public Criteria andGenderLike(String value) {
            addCriterion("Gender like", value, "gender");
            return (Criteria) this;
        }

        public Criteria andGenderNotLike(String value) {
            addCriterion("Gender not like", value, "gender");
            return (Criteria) this;
        }

        public Criteria andGenderIn(List<String> values) {
            addCriterion("Gender in", values, "gender");
            return (Criteria) this;
        }

        public Criteria andGenderNotIn(List<String> values) {
            addCriterion("Gender not in", values, "gender");
            return (Criteria) this;
        }

        public Criteria andGenderBetween(String value1, String value2) {
            addCriterion("Gender between", value1, value2, "gender");
            return (Criteria) this;
        }

        public Criteria andGenderNotBetween(String value1, String value2) {
            addCriterion("Gender not between", value1, value2, "gender");
            return (Criteria) this;
        }

        public Criteria andTeacherNativeIsNull() {
            addCriterion("TeacherNative is null");
            return (Criteria) this;
        }

        public Criteria andTeacherNativeIsNotNull() {
            addCriterion("TeacherNative is not null");
            return (Criteria) this;
        }

        public Criteria andTeacherNativeEqualTo(String value) {
            addCriterion("TeacherNative =", value, "teacherNative");
            return (Criteria) this;
        }

        public Criteria andTeacherNativeNotEqualTo(String value) {
            addCriterion("TeacherNative <>", value, "teacherNative");
            return (Criteria) this;
        }

        public Criteria andTeacherNativeGreaterThan(String value) {
            addCriterion("TeacherNative >", value, "teacherNative");
            return (Criteria) this;
        }

        public Criteria andTeacherNativeGreaterThanOrEqualTo(String value) {
            addCriterion("TeacherNative >=", value, "teacherNative");
            return (Criteria) this;
        }

        public Criteria andTeacherNativeLessThan(String value) {
            addCriterion("TeacherNative <", value, "teacherNative");
            return (Criteria) this;
        }

        public Criteria andTeacherNativeLessThanOrEqualTo(String value) {
            addCriterion("TeacherNative <=", value, "teacherNative");
            return (Criteria) this;
        }

        public Criteria andTeacherNativeLike(String value) {
            addCriterion("TeacherNative like", value, "teacherNative");
            return (Criteria) this;
        }

        public Criteria andTeacherNativeNotLike(String value) {
            addCriterion("TeacherNative not like", value, "teacherNative");
            return (Criteria) this;
        }

        public Criteria andTeacherNativeIn(List<String> values) {
            addCriterion("TeacherNative in", values, "teacherNative");
            return (Criteria) this;
        }

        public Criteria andTeacherNativeNotIn(List<String> values) {
            addCriterion("TeacherNative not in", values, "teacherNative");
            return (Criteria) this;
        }

        public Criteria andTeacherNativeBetween(String value1, String value2) {
            addCriterion("TeacherNative between", value1, value2, "teacherNative");
            return (Criteria) this;
        }

        public Criteria andTeacherNativeNotBetween(String value1, String value2) {
            addCriterion("TeacherNative not between", value1, value2, "teacherNative");
            return (Criteria) this;
        }

        public Criteria andInstituteIdIsNull() {
            addCriterion("InstituteId is null");
            return (Criteria) this;
        }

        public Criteria andInstituteIdIsNotNull() {
            addCriterion("InstituteId is not null");
            return (Criteria) this;
        }

        public Criteria andInstituteIdEqualTo(Integer value) {
            addCriterion("InstituteId =", value, "instituteId");
            return (Criteria) this;
        }

        public Criteria andInstituteIdNotEqualTo(Integer value) {
            addCriterion("InstituteId <>", value, "instituteId");
            return (Criteria) this;
        }

        public Criteria andInstituteIdGreaterThan(Integer value) {
            addCriterion("InstituteId >", value, "instituteId");
            return (Criteria) this;
        }

        public Criteria andInstituteIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("InstituteId >=", value, "instituteId");
            return (Criteria) this;
        }

        public Criteria andInstituteIdLessThan(Integer value) {
            addCriterion("InstituteId <", value, "instituteId");
            return (Criteria) this;
        }

        public Criteria andInstituteIdLessThanOrEqualTo(Integer value) {
            addCriterion("InstituteId <=", value, "instituteId");
            return (Criteria) this;
        }

        public Criteria andInstituteIdIn(List<Integer> values) {
            addCriterion("InstituteId in", values, "instituteId");
            return (Criteria) this;
        }

        public Criteria andInstituteIdNotIn(List<Integer> values) {
            addCriterion("InstituteId not in", values, "instituteId");
            return (Criteria) this;
        }

        public Criteria andInstituteIdBetween(Integer value1, Integer value2) {
            addCriterion("InstituteId between", value1, value2, "instituteId");
            return (Criteria) this;
        }

        public Criteria andInstituteIdNotBetween(Integer value1, Integer value2) {
            addCriterion("InstituteId not between", value1, value2, "instituteId");
            return (Criteria) this;
        }

        public Criteria andTeacherTelIsNull() {
            addCriterion("TeacherTel is null");
            return (Criteria) this;
        }

        public Criteria andTeacherTelIsNotNull() {
            addCriterion("TeacherTel is not null");
            return (Criteria) this;
        }

        public Criteria andTeacherTelEqualTo(Integer value) {
            addCriterion("TeacherTel =", value, "teacherTel");
            return (Criteria) this;
        }

        public Criteria andTeacherTelNotEqualTo(Integer value) {
            addCriterion("TeacherTel <>", value, "teacherTel");
            return (Criteria) this;
        }

        public Criteria andTeacherTelGreaterThan(Integer value) {
            addCriterion("TeacherTel >", value, "teacherTel");
            return (Criteria) this;
        }

        public Criteria andTeacherTelGreaterThanOrEqualTo(Integer value) {
            addCriterion("TeacherTel >=", value, "teacherTel");
            return (Criteria) this;
        }

        public Criteria andTeacherTelLessThan(Integer value) {
            addCriterion("TeacherTel <", value, "teacherTel");
            return (Criteria) this;
        }

        public Criteria andTeacherTelLessThanOrEqualTo(Integer value) {
            addCriterion("TeacherTel <=", value, "teacherTel");
            return (Criteria) this;
        }

        public Criteria andTeacherTelIn(List<Integer> values) {
            addCriterion("TeacherTel in", values, "teacherTel");
            return (Criteria) this;
        }

        public Criteria andTeacherTelNotIn(List<Integer> values) {
            addCriterion("TeacherTel not in", values, "teacherTel");
            return (Criteria) this;
        }

        public Criteria andTeacherTelBetween(Integer value1, Integer value2) {
            addCriterion("TeacherTel between", value1, value2, "teacherTel");
            return (Criteria) this;
        }

        public Criteria andTeacherTelNotBetween(Integer value1, Integer value2) {
            addCriterion("TeacherTel not between", value1, value2, "teacherTel");
            return (Criteria) this;
        }

        public Criteria andTeacherBirthdayIsNull() {
            addCriterion("TeacherBirthday is null");
            return (Criteria) this;
        }

        public Criteria andTeacherBirthdayIsNotNull() {
            addCriterion("TeacherBirthday is not null");
            return (Criteria) this;
        }

        public Criteria andTeacherBirthdayEqualTo(Date value) {
            addCriterionForJDBCDate("TeacherBirthday =", value, "teacherBirthday");
            return (Criteria) this;
        }

        public Criteria andTeacherBirthdayNotEqualTo(Date value) {
            addCriterionForJDBCDate("TeacherBirthday <>", value, "teacherBirthday");
            return (Criteria) this;
        }

        public Criteria andTeacherBirthdayGreaterThan(Date value) {
            addCriterionForJDBCDate("TeacherBirthday >", value, "teacherBirthday");
            return (Criteria) this;
        }

        public Criteria andTeacherBirthdayGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("TeacherBirthday >=", value, "teacherBirthday");
            return (Criteria) this;
        }

        public Criteria andTeacherBirthdayLessThan(Date value) {
            addCriterionForJDBCDate("TeacherBirthday <", value, "teacherBirthday");
            return (Criteria) this;
        }

        public Criteria andTeacherBirthdayLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("TeacherBirthday <=", value, "teacherBirthday");
            return (Criteria) this;
        }

        public Criteria andTeacherBirthdayIn(List<Date> values) {
            addCriterionForJDBCDate("TeacherBirthday in", values, "teacherBirthday");
            return (Criteria) this;
        }

        public Criteria andTeacherBirthdayNotIn(List<Date> values) {
            addCriterionForJDBCDate("TeacherBirthday not in", values, "teacherBirthday");
            return (Criteria) this;
        }

        public Criteria andTeacherBirthdayBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("TeacherBirthday between", value1, value2, "teacherBirthday");
            return (Criteria) this;
        }

        public Criteria andTeacherBirthdayNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("TeacherBirthday not between", value1, value2, "teacherBirthday");
            return (Criteria) this;
        }

        public Criteria andPasswordIsNull() {
            addCriterion("Password is null");
            return (Criteria) this;
        }

        public Criteria andPasswordIsNotNull() {
            addCriterion("Password is not null");
            return (Criteria) this;
        }

        public Criteria andPasswordEqualTo(String value) {
            addCriterion("Password =", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordNotEqualTo(String value) {
            addCriterion("Password <>", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordGreaterThan(String value) {
            addCriterion("Password >", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordGreaterThanOrEqualTo(String value) {
            addCriterion("Password >=", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordLessThan(String value) {
            addCriterion("Password <", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordLessThanOrEqualTo(String value) {
            addCriterion("Password <=", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordLike(String value) {
            addCriterion("Password like", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordNotLike(String value) {
            addCriterion("Password not like", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordIn(List<String> values) {
            addCriterion("Password in", values, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordNotIn(List<String> values) {
            addCriterion("Password not in", values, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordBetween(String value1, String value2) {
            addCriterion("Password between", value1, value2, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordNotBetween(String value1, String value2) {
            addCriterion("Password not between", value1, value2, "password");
            return (Criteria) this;
        }

        public Criteria andEntryTimeIsNull() {
            addCriterion("EntryTime is null");
            return (Criteria) this;
        }

        public Criteria andEntryTimeIsNotNull() {
            addCriterion("EntryTime is not null");
            return (Criteria) this;
        }

        public Criteria andEntryTimeEqualTo(Date value) {
            addCriterionForJDBCDate("EntryTime =", value, "entryTime");
            return (Criteria) this;
        }

        public Criteria andEntryTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("EntryTime <>", value, "entryTime");
            return (Criteria) this;
        }

        public Criteria andEntryTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("EntryTime >", value, "entryTime");
            return (Criteria) this;
        }

        public Criteria andEntryTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("EntryTime >=", value, "entryTime");
            return (Criteria) this;
        }

        public Criteria andEntryTimeLessThan(Date value) {
            addCriterionForJDBCDate("EntryTime <", value, "entryTime");
            return (Criteria) this;
        }

        public Criteria andEntryTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("EntryTime <=", value, "entryTime");
            return (Criteria) this;
        }

        public Criteria andEntryTimeIn(List<Date> values) {
            addCriterionForJDBCDate("EntryTime in", values, "entryTime");
            return (Criteria) this;
        }

        public Criteria andEntryTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("EntryTime not in", values, "entryTime");
            return (Criteria) this;
        }

        public Criteria andEntryTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("EntryTime between", value1, value2, "entryTime");
            return (Criteria) this;
        }

        public Criteria andEntryTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("EntryTime not between", value1, value2, "entryTime");
            return (Criteria) this;
        }

        public Criteria andTeacherLevelIsNull() {
            addCriterion("TeacherLevel is null");
            return (Criteria) this;
        }

        public Criteria andTeacherLevelIsNotNull() {
            addCriterion("TeacherLevel is not null");
            return (Criteria) this;
        }

        public Criteria andTeacherLevelEqualTo(String value) {
            addCriterion("TeacherLevel =", value, "teacherLevel");
            return (Criteria) this;
        }

        public Criteria andTeacherLevelNotEqualTo(String value) {
            addCriterion("TeacherLevel <>", value, "teacherLevel");
            return (Criteria) this;
        }

        public Criteria andTeacherLevelGreaterThan(String value) {
            addCriterion("TeacherLevel >", value, "teacherLevel");
            return (Criteria) this;
        }

        public Criteria andTeacherLevelGreaterThanOrEqualTo(String value) {
            addCriterion("TeacherLevel >=", value, "teacherLevel");
            return (Criteria) this;
        }

        public Criteria andTeacherLevelLessThan(String value) {
            addCriterion("TeacherLevel <", value, "teacherLevel");
            return (Criteria) this;
        }

        public Criteria andTeacherLevelLessThanOrEqualTo(String value) {
            addCriterion("TeacherLevel <=", value, "teacherLevel");
            return (Criteria) this;
        }

        public Criteria andTeacherLevelLike(String value) {
            addCriterion("TeacherLevel like", value, "teacherLevel");
            return (Criteria) this;
        }

        public Criteria andTeacherLevelNotLike(String value) {
            addCriterion("TeacherLevel not like", value, "teacherLevel");
            return (Criteria) this;
        }

        public Criteria andTeacherLevelIn(List<String> values) {
            addCriterion("TeacherLevel in", values, "teacherLevel");
            return (Criteria) this;
        }

        public Criteria andTeacherLevelNotIn(List<String> values) {
            addCriterion("TeacherLevel not in", values, "teacherLevel");
            return (Criteria) this;
        }

        public Criteria andTeacherLevelBetween(String value1, String value2) {
            addCriterion("TeacherLevel between", value1, value2, "teacherLevel");
            return (Criteria) this;
        }

        public Criteria andTeacherLevelNotBetween(String value1, String value2) {
            addCriterion("TeacherLevel not between", value1, value2, "teacherLevel");
            return (Criteria) this;
        }

        public Criteria andSave1IsNull() {
            addCriterion("Save1 is null");
            return (Criteria) this;
        }

        public Criteria andSave1IsNotNull() {
            addCriterion("Save1 is not null");
            return (Criteria) this;
        }

        public Criteria andSave1EqualTo(String value) {
            addCriterion("Save1 =", value, "save1");
            return (Criteria) this;
        }

        public Criteria andSave1NotEqualTo(String value) {
            addCriterion("Save1 <>", value, "save1");
            return (Criteria) this;
        }

        public Criteria andSave1GreaterThan(String value) {
            addCriterion("Save1 >", value, "save1");
            return (Criteria) this;
        }

        public Criteria andSave1GreaterThanOrEqualTo(String value) {
            addCriterion("Save1 >=", value, "save1");
            return (Criteria) this;
        }

        public Criteria andSave1LessThan(String value) {
            addCriterion("Save1 <", value, "save1");
            return (Criteria) this;
        }

        public Criteria andSave1LessThanOrEqualTo(String value) {
            addCriterion("Save1 <=", value, "save1");
            return (Criteria) this;
        }

        public Criteria andSave1Like(String value) {
            addCriterion("Save1 like", value, "save1");
            return (Criteria) this;
        }

        public Criteria andSave1NotLike(String value) {
            addCriterion("Save1 not like", value, "save1");
            return (Criteria) this;
        }

        public Criteria andSave1In(List<String> values) {
            addCriterion("Save1 in", values, "save1");
            return (Criteria) this;
        }

        public Criteria andSave1NotIn(List<String> values) {
            addCriterion("Save1 not in", values, "save1");
            return (Criteria) this;
        }

        public Criteria andSave1Between(String value1, String value2) {
            addCriterion("Save1 between", value1, value2, "save1");
            return (Criteria) this;
        }

        public Criteria andSave1NotBetween(String value1, String value2) {
            addCriterion("Save1 not between", value1, value2, "save1");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Teacher
     *
     * @mbggenerated do_not_delete_during_merge Thu Apr 09 13:16:52 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Teacher
     *
     * @mbggenerated Thu Apr 09 13:16:52 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}