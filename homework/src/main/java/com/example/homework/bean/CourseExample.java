package com.example.homework.bean;

import java.util.ArrayList;
import java.util.List;

public class CourseExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Course
     *
     * @mbg.generated Sun Apr 12 16:55:29 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Course
     *
     * @mbg.generated Sun Apr 12 16:55:29 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Course
     *
     * @mbg.generated Sun Apr 12 16:55:29 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Course
     *
     * @mbg.generated Sun Apr 12 16:55:29 CST 2020
     */
    public CourseExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Course
     *
     * @mbg.generated Sun Apr 12 16:55:29 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Course
     *
     * @mbg.generated Sun Apr 12 16:55:29 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Course
     *
     * @mbg.generated Sun Apr 12 16:55:29 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Course
     *
     * @mbg.generated Sun Apr 12 16:55:29 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Course
     *
     * @mbg.generated Sun Apr 12 16:55:29 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Course
     *
     * @mbg.generated Sun Apr 12 16:55:29 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Course
     *
     * @mbg.generated Sun Apr 12 16:55:29 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Course
     *
     * @mbg.generated Sun Apr 12 16:55:29 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Course
     *
     * @mbg.generated Sun Apr 12 16:55:29 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Course
     *
     * @mbg.generated Sun Apr 12 16:55:29 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Course
     *
     * @mbg.generated Sun Apr 12 16:55:29 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCourseIdIsNull() {
            addCriterion("CourseId is null");
            return (Criteria) this;
        }

        public Criteria andCourseIdIsNotNull() {
            addCriterion("CourseId is not null");
            return (Criteria) this;
        }

        public Criteria andCourseIdEqualTo(Integer value) {
            addCriterion("CourseId =", value, "courseId");
            return (Criteria) this;
        }

        public Criteria andCourseIdNotEqualTo(Integer value) {
            addCriterion("CourseId <>", value, "courseId");
            return (Criteria) this;
        }

        public Criteria andCourseIdGreaterThan(Integer value) {
            addCriterion("CourseId >", value, "courseId");
            return (Criteria) this;
        }

        public Criteria andCourseIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("CourseId >=", value, "courseId");
            return (Criteria) this;
        }

        public Criteria andCourseIdLessThan(Integer value) {
            addCriterion("CourseId <", value, "courseId");
            return (Criteria) this;
        }

        public Criteria andCourseIdLessThanOrEqualTo(Integer value) {
            addCriterion("CourseId <=", value, "courseId");
            return (Criteria) this;
        }

        public Criteria andCourseIdIn(List<Integer> values) {
            addCriterion("CourseId in", values, "courseId");
            return (Criteria) this;
        }

        public Criteria andCourseIdNotIn(List<Integer> values) {
            addCriterion("CourseId not in", values, "courseId");
            return (Criteria) this;
        }

        public Criteria andCourseIdBetween(Integer value1, Integer value2) {
            addCriterion("CourseId between", value1, value2, "courseId");
            return (Criteria) this;
        }

        public Criteria andCourseIdNotBetween(Integer value1, Integer value2) {
            addCriterion("CourseId not between", value1, value2, "courseId");
            return (Criteria) this;
        }

        public Criteria andCourseNameIsNull() {
            addCriterion("CourseName is null");
            return (Criteria) this;
        }

        public Criteria andCourseNameIsNotNull() {
            addCriterion("CourseName is not null");
            return (Criteria) this;
        }

        public Criteria andCourseNameEqualTo(String value) {
            addCriterion("CourseName =", value, "courseName");
            return (Criteria) this;
        }

        public Criteria andCourseNameNotEqualTo(String value) {
            addCriterion("CourseName <>", value, "courseName");
            return (Criteria) this;
        }

        public Criteria andCourseNameGreaterThan(String value) {
            addCriterion("CourseName >", value, "courseName");
            return (Criteria) this;
        }

        public Criteria andCourseNameGreaterThanOrEqualTo(String value) {
            addCriterion("CourseName >=", value, "courseName");
            return (Criteria) this;
        }

        public Criteria andCourseNameLessThan(String value) {
            addCriterion("CourseName <", value, "courseName");
            return (Criteria) this;
        }

        public Criteria andCourseNameLessThanOrEqualTo(String value) {
            addCriterion("CourseName <=", value, "courseName");
            return (Criteria) this;
        }

        public Criteria andCourseNameLike(String value) {
            addCriterion("CourseName like", value, "courseName");
            return (Criteria) this;
        }

        public Criteria andCourseNameNotLike(String value) {
            addCriterion("CourseName not like", value, "courseName");
            return (Criteria) this;
        }

        public Criteria andCourseNameIn(List<String> values) {
            addCriterion("CourseName in", values, "courseName");
            return (Criteria) this;
        }

        public Criteria andCourseNameNotIn(List<String> values) {
            addCriterion("CourseName not in", values, "courseName");
            return (Criteria) this;
        }

        public Criteria andCourseNameBetween(String value1, String value2) {
            addCriterion("CourseName between", value1, value2, "courseName");
            return (Criteria) this;
        }

        public Criteria andCourseNameNotBetween(String value1, String value2) {
            addCriterion("CourseName not between", value1, value2, "courseName");
            return (Criteria) this;
        }

        public Criteria andInstituteIdIsNull() {
            addCriterion("InstituteId is null");
            return (Criteria) this;
        }

        public Criteria andInstituteIdIsNotNull() {
            addCriterion("InstituteId is not null");
            return (Criteria) this;
        }

        public Criteria andInstituteIdEqualTo(Integer value) {
            addCriterion("InstituteId =", value, "instituteId");
            return (Criteria) this;
        }

        public Criteria andInstituteIdNotEqualTo(Integer value) {
            addCriterion("InstituteId <>", value, "instituteId");
            return (Criteria) this;
        }

        public Criteria andInstituteIdGreaterThan(Integer value) {
            addCriterion("InstituteId >", value, "instituteId");
            return (Criteria) this;
        }

        public Criteria andInstituteIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("InstituteId >=", value, "instituteId");
            return (Criteria) this;
        }

        public Criteria andInstituteIdLessThan(Integer value) {
            addCriterion("InstituteId <", value, "instituteId");
            return (Criteria) this;
        }

        public Criteria andInstituteIdLessThanOrEqualTo(Integer value) {
            addCriterion("InstituteId <=", value, "instituteId");
            return (Criteria) this;
        }

        public Criteria andInstituteIdIn(List<Integer> values) {
            addCriterion("InstituteId in", values, "instituteId");
            return (Criteria) this;
        }

        public Criteria andInstituteIdNotIn(List<Integer> values) {
            addCriterion("InstituteId not in", values, "instituteId");
            return (Criteria) this;
        }

        public Criteria andInstituteIdBetween(Integer value1, Integer value2) {
            addCriterion("InstituteId between", value1, value2, "instituteId");
            return (Criteria) this;
        }

        public Criteria andInstituteIdNotBetween(Integer value1, Integer value2) {
            addCriterion("InstituteId not between", value1, value2, "instituteId");
            return (Criteria) this;
        }

        public Criteria andCourseCreditIsNull() {
            addCriterion("CourseCredit is null");
            return (Criteria) this;
        }

        public Criteria andCourseCreditIsNotNull() {
            addCriterion("CourseCredit is not null");
            return (Criteria) this;
        }

        public Criteria andCourseCreditEqualTo(Float value) {
            addCriterion("CourseCredit =", value, "courseCredit");
            return (Criteria) this;
        }

        public Criteria andCourseCreditNotEqualTo(Float value) {
            addCriterion("CourseCredit <>", value, "courseCredit");
            return (Criteria) this;
        }

        public Criteria andCourseCreditGreaterThan(Float value) {
            addCriterion("CourseCredit >", value, "courseCredit");
            return (Criteria) this;
        }

        public Criteria andCourseCreditGreaterThanOrEqualTo(Float value) {
            addCriterion("CourseCredit >=", value, "courseCredit");
            return (Criteria) this;
        }

        public Criteria andCourseCreditLessThan(Float value) {
            addCriterion("CourseCredit <", value, "courseCredit");
            return (Criteria) this;
        }

        public Criteria andCourseCreditLessThanOrEqualTo(Float value) {
            addCriterion("CourseCredit <=", value, "courseCredit");
            return (Criteria) this;
        }

        public Criteria andCourseCreditIn(List<Float> values) {
            addCriterion("CourseCredit in", values, "courseCredit");
            return (Criteria) this;
        }

        public Criteria andCourseCreditNotIn(List<Float> values) {
            addCriterion("CourseCredit not in", values, "courseCredit");
            return (Criteria) this;
        }

        public Criteria andCourseCreditBetween(Float value1, Float value2) {
            addCriterion("CourseCredit between", value1, value2, "courseCredit");
            return (Criteria) this;
        }

        public Criteria andCourseCreditNotBetween(Float value1, Float value2) {
            addCriterion("CourseCredit not between", value1, value2, "courseCredit");
            return (Criteria) this;
        }

        public Criteria andCourseHoursIsNull() {
            addCriterion("CourseHours is null");
            return (Criteria) this;
        }

        public Criteria andCourseHoursIsNotNull() {
            addCriterion("CourseHours is not null");
            return (Criteria) this;
        }

        public Criteria andCourseHoursEqualTo(Short value) {
            addCriterion("CourseHours =", value, "courseHours");
            return (Criteria) this;
        }

        public Criteria andCourseHoursNotEqualTo(Short value) {
            addCriterion("CourseHours <>", value, "courseHours");
            return (Criteria) this;
        }

        public Criteria andCourseHoursGreaterThan(Short value) {
            addCriterion("CourseHours >", value, "courseHours");
            return (Criteria) this;
        }

        public Criteria andCourseHoursGreaterThanOrEqualTo(Short value) {
            addCriterion("CourseHours >=", value, "courseHours");
            return (Criteria) this;
        }

        public Criteria andCourseHoursLessThan(Short value) {
            addCriterion("CourseHours <", value, "courseHours");
            return (Criteria) this;
        }

        public Criteria andCourseHoursLessThanOrEqualTo(Short value) {
            addCriterion("CourseHours <=", value, "courseHours");
            return (Criteria) this;
        }

        public Criteria andCourseHoursIn(List<Short> values) {
            addCriterion("CourseHours in", values, "courseHours");
            return (Criteria) this;
        }

        public Criteria andCourseHoursNotIn(List<Short> values) {
            addCriterion("CourseHours not in", values, "courseHours");
            return (Criteria) this;
        }

        public Criteria andCourseHoursBetween(Short value1, Short value2) {
            addCriterion("CourseHours between", value1, value2, "courseHours");
            return (Criteria) this;
        }

        public Criteria andCourseHoursNotBetween(Short value1, Short value2) {
            addCriterion("CourseHours not between", value1, value2, "courseHours");
            return (Criteria) this;
        }

        public Criteria andCourseUrlIsNull() {
            addCriterion("CourseUrl is null");
            return (Criteria) this;
        }

        public Criteria andCourseUrlIsNotNull() {
            addCriterion("CourseUrl is not null");
            return (Criteria) this;
        }

        public Criteria andCourseUrlEqualTo(String value) {
            addCriterion("CourseUrl =", value, "courseUrl");
            return (Criteria) this;
        }

        public Criteria andCourseUrlNotEqualTo(String value) {
            addCriterion("CourseUrl <>", value, "courseUrl");
            return (Criteria) this;
        }

        public Criteria andCourseUrlGreaterThan(String value) {
            addCriterion("CourseUrl >", value, "courseUrl");
            return (Criteria) this;
        }

        public Criteria andCourseUrlGreaterThanOrEqualTo(String value) {
            addCriterion("CourseUrl >=", value, "courseUrl");
            return (Criteria) this;
        }

        public Criteria andCourseUrlLessThan(String value) {
            addCriterion("CourseUrl <", value, "courseUrl");
            return (Criteria) this;
        }

        public Criteria andCourseUrlLessThanOrEqualTo(String value) {
            addCriterion("CourseUrl <=", value, "courseUrl");
            return (Criteria) this;
        }

        public Criteria andCourseUrlLike(String value) {
            addCriterion("CourseUrl like", value, "courseUrl");
            return (Criteria) this;
        }

        public Criteria andCourseUrlNotLike(String value) {
            addCriterion("CourseUrl not like", value, "courseUrl");
            return (Criteria) this;
        }

        public Criteria andCourseUrlIn(List<String> values) {
            addCriterion("CourseUrl in", values, "courseUrl");
            return (Criteria) this;
        }

        public Criteria andCourseUrlNotIn(List<String> values) {
            addCriterion("CourseUrl not in", values, "courseUrl");
            return (Criteria) this;
        }

        public Criteria andCourseUrlBetween(String value1, String value2) {
            addCriterion("CourseUrl between", value1, value2, "courseUrl");
            return (Criteria) this;
        }

        public Criteria andCourseUrlNotBetween(String value1, String value2) {
            addCriterion("CourseUrl not between", value1, value2, "courseUrl");
            return (Criteria) this;
        }

        public Criteria andCourseTypeIsNull() {
            addCriterion("CourseType is null");
            return (Criteria) this;
        }

        public Criteria andCourseTypeIsNotNull() {
            addCriterion("CourseType is not null");
            return (Criteria) this;
        }

        public Criteria andCourseTypeEqualTo(String value) {
            addCriterion("CourseType =", value, "courseType");
            return (Criteria) this;
        }

        public Criteria andCourseTypeNotEqualTo(String value) {
            addCriterion("CourseType <>", value, "courseType");
            return (Criteria) this;
        }

        public Criteria andCourseTypeGreaterThan(String value) {
            addCriterion("CourseType >", value, "courseType");
            return (Criteria) this;
        }

        public Criteria andCourseTypeGreaterThanOrEqualTo(String value) {
            addCriterion("CourseType >=", value, "courseType");
            return (Criteria) this;
        }

        public Criteria andCourseTypeLessThan(String value) {
            addCriterion("CourseType <", value, "courseType");
            return (Criteria) this;
        }

        public Criteria andCourseTypeLessThanOrEqualTo(String value) {
            addCriterion("CourseType <=", value, "courseType");
            return (Criteria) this;
        }

        public Criteria andCourseTypeLike(String value) {
            addCriterion("CourseType like", value, "courseType");
            return (Criteria) this;
        }

        public Criteria andCourseTypeNotLike(String value) {
            addCriterion("CourseType not like", value, "courseType");
            return (Criteria) this;
        }

        public Criteria andCourseTypeIn(List<String> values) {
            addCriterion("CourseType in", values, "courseType");
            return (Criteria) this;
        }

        public Criteria andCourseTypeNotIn(List<String> values) {
            addCriterion("CourseType not in", values, "courseType");
            return (Criteria) this;
        }

        public Criteria andCourseTypeBetween(String value1, String value2) {
            addCriterion("CourseType between", value1, value2, "courseType");
            return (Criteria) this;
        }

        public Criteria andCourseTypeNotBetween(String value1, String value2) {
            addCriterion("CourseType not between", value1, value2, "courseType");
            return (Criteria) this;
        }

        public Criteria andSave1IsNull() {
            addCriterion("Save1 is null");
            return (Criteria) this;
        }

        public Criteria andSave1IsNotNull() {
            addCriterion("Save1 is not null");
            return (Criteria) this;
        }

        public Criteria andSave1EqualTo(String value) {
            addCriterion("Save1 =", value, "save1");
            return (Criteria) this;
        }

        public Criteria andSave1NotEqualTo(String value) {
            addCriterion("Save1 <>", value, "save1");
            return (Criteria) this;
        }

        public Criteria andSave1GreaterThan(String value) {
            addCriterion("Save1 >", value, "save1");
            return (Criteria) this;
        }

        public Criteria andSave1GreaterThanOrEqualTo(String value) {
            addCriterion("Save1 >=", value, "save1");
            return (Criteria) this;
        }

        public Criteria andSave1LessThan(String value) {
            addCriterion("Save1 <", value, "save1");
            return (Criteria) this;
        }

        public Criteria andSave1LessThanOrEqualTo(String value) {
            addCriterion("Save1 <=", value, "save1");
            return (Criteria) this;
        }

        public Criteria andSave1Like(String value) {
            addCriterion("Save1 like", value, "save1");
            return (Criteria) this;
        }

        public Criteria andSave1NotLike(String value) {
            addCriterion("Save1 not like", value, "save1");
            return (Criteria) this;
        }

        public Criteria andSave1In(List<String> values) {
            addCriterion("Save1 in", values, "save1");
            return (Criteria) this;
        }

        public Criteria andSave1NotIn(List<String> values) {
            addCriterion("Save1 not in", values, "save1");
            return (Criteria) this;
        }

        public Criteria andSave1Between(String value1, String value2) {
            addCriterion("Save1 between", value1, value2, "save1");
            return (Criteria) this;
        }

        public Criteria andSave1NotBetween(String value1, String value2) {
            addCriterion("Save1 not between", value1, value2, "save1");
            return (Criteria) this;
        }

        public Criteria andSave2IsNull() {
            addCriterion("Save2 is null");
            return (Criteria) this;
        }

        public Criteria andSave2IsNotNull() {
            addCriterion("Save2 is not null");
            return (Criteria) this;
        }

        public Criteria andSave2EqualTo(String value) {
            addCriterion("Save2 =", value, "save2");
            return (Criteria) this;
        }

        public Criteria andSave2NotEqualTo(String value) {
            addCriterion("Save2 <>", value, "save2");
            return (Criteria) this;
        }

        public Criteria andSave2GreaterThan(String value) {
            addCriterion("Save2 >", value, "save2");
            return (Criteria) this;
        }

        public Criteria andSave2GreaterThanOrEqualTo(String value) {
            addCriterion("Save2 >=", value, "save2");
            return (Criteria) this;
        }

        public Criteria andSave2LessThan(String value) {
            addCriterion("Save2 <", value, "save2");
            return (Criteria) this;
        }

        public Criteria andSave2LessThanOrEqualTo(String value) {
            addCriterion("Save2 <=", value, "save2");
            return (Criteria) this;
        }

        public Criteria andSave2Like(String value) {
            addCriterion("Save2 like", value, "save2");
            return (Criteria) this;
        }

        public Criteria andSave2NotLike(String value) {
            addCriterion("Save2 not like", value, "save2");
            return (Criteria) this;
        }

        public Criteria andSave2In(List<String> values) {
            addCriterion("Save2 in", values, "save2");
            return (Criteria) this;
        }

        public Criteria andSave2NotIn(List<String> values) {
            addCriterion("Save2 not in", values, "save2");
            return (Criteria) this;
        }

        public Criteria andSave2Between(String value1, String value2) {
            addCriterion("Save2 between", value1, value2, "save2");
            return (Criteria) this;
        }

        public Criteria andSave2NotBetween(String value1, String value2) {
            addCriterion("Save2 not between", value1, value2, "save2");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Course
     *
     * @mbg.generated do_not_delete_during_merge Sun Apr 12 16:55:29 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Course
     *
     * @mbg.generated Sun Apr 12 16:55:29 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}